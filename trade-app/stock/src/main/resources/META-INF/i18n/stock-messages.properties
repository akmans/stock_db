############################################################################################
##                                     Service message                                    ##
############################################################################################
core.service.market.record.notfound = The record(code = {0}) was not found.
core.service.market.record.notfound.by.name = The record(name = {0}) was not found.
core.service.market.record.found.duplicated = Duplicated records(name = {0}) found.
core.service.market.record.inconsistent = The record(code = {0}) was updated by other user.
core.service.market.record.alreadyexist = The record(code = {0}) could not be created since already exist.

core.service.scale.record.notfound = The record(code = {0}) was not found.
core.service.scale.record.inconsistent = The record(code = {0}) was updated by other user.
core.service.scale.record.alreadyexist = The record(code = {0}) could not be created since already exist.

core.service.sector17.record.notfound = The record(code = {0}) was not found.
core.service.sector17.record.inconsistent = The record(code = {0}) was updated by other user.
core.service.sector17.record.alreadyexist = The record(code = {0}) could not be created since already exist.

core.service.sector33.record.notfound = The record(code = {0}) was not found.
core.service.sector33.record.inconsistent = The record(code = {0}) was updated by other user.
core.service.sector33.record.alreadyexist = The record(code = {0}) could not be created since already exist.

core.service.instrument.record.notfound = The record(code = {0}) was not found.
core.service.instrument.record.inconsistent = The record(code = {0}) was updated by other user.
core.service.instrument.record.alreadyexist = The record(code = {0}) could not be created since already exist.

core.service.japanstock.record.notfound = The record(code = {0}) was not found.
core.service.japanstock.record.inconsistent = The record(code = {0}) was updated by other user.
core.service.japanstock.record.alreadyexist = The record(code = {0}) could not be created since already exist.

core.service.japanstocklog.record.notfound = The record(primary key = {0}) was not found.
core.service.japanstocklog.record.inconsistent = The record(primary key = {0}) was updated by other user.
core.service.japanstocklog.record.alreadyexist = The record(primary key = {0}) could not be created since already exist.

############################################################################################
##                                    Controller message                                  ##
############################################################################################
controller.market.insert.finish = Inserted successfully.
controller.market.update.finish = Updated successfully.
controller.market.delete.finish = Deleted successfully.

controller.japanstocklog.insert.finish = Inserted successfully.
controller.japanstocklog.not.businessday = Job[{0}] can not be run on nonbusiness day.
controller.japanstocklog.job.already.completed = A completed job[{0}] can not be restarted.

############################################################################################
##                                    Validation message                                  ##
############################################################################################
# custom validation message
form.marketform.code.notnull = Code can not be null.
form.marketform.code.min = Code must be great than 0.
form.marketform.code.name = Length of name should between 1 and 30.

form.scaleform.code.notnull = Code can not be null.
form.scaleform.code.min = Code must be great than 0.
form.scaleform.code.name = Length of name should between 1 and 30.

form.sector17form.code.notnull = Code can not be null.
form.sector17form.code.min = Code must be great than 0.
form.sector17form.code.name = Length of name should between 1 and 30.

form.sector33form.code.notnull = Code can not be null.
form.sector33form.code.min = Code must be great than 0.
form.sector33form.code.name = Length of name should between 1 and 30.

form.instrumentform.code.notnull = Code can not be null.
form.instrumentform.code.min = Code must be great than 0.
form.instrumentform.name.length = Length of name should between 1 and 30.
form.instrumentform.onboard.notnull = Delisting can not be null.

form.japanstocklogform.jobid.notnull = Job Id can not be null.
form.japanstocklogform.processdate.notnull = Process Date can not be null.
